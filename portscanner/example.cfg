config_version=1

# Set level for tracing
# mask set
# 0x00 - disabled
# 0x01 - info 
# 0x02 - error
# trace_level_mask=decimal

trace_level_mask=2

# Timeout for socket connecting
# format: connecting_timeout=seconds[,microseconds]

connecting_timeout=0,500

# Timeout for socket input/output operatioons  
# format: connecting_timeout=milliseconds

io_timeout=500

# thread_opts
# format=count, max_messages
# example: thread_opts=40,10000

thread_opts=40,10000


# write_result_stage
# Write the scan result to a file inside the "<root folder>/results/" folder if the scan result matches this stage (scannedStage >= this stage).
# Stages
#   0 (unsuccessful connection)
#   1 (Connected to host by port)
#   2 (Successful confirmation of the transfer protocol.)
# format=decimal
# example: write_result_stage=2 (write result when protocol is confirmed)

write_result_stage=2

# scanned_flush_period
# Period of writing the last scanned host to the last_scanned_host file. The period is seconds during which hosts were processed in 1 single thread.
# format: scanned_flush_period=seconds
# example: scanned_flush_period=5
scanned_flush_period=5

### TARGET CONFIGURATION ###

# output_folder
# The root folder that will be used to store the parsed data.
# Only abc-num-(_) characters allowed. 
# The root folder will be created with the "portscanner_" prefix.
# Created files in root folder:
#   logs/* - log files
#   result/* - result files. Used as a repository for successfully scanned ports
#   last_scanned_host - file with staging-scanned host to continue scanning after restarting the application.
# format: target_folder=test

output_folder=test

# Used instance type
# supported instance types: 
# 1 = PostgreSQL-based databases 
# format: instance_type=type 

instance_type=1

# host_ranges
# format:  host_ranges={host-host | host} [,...] 

host_ranges=192.168.1.168, 192.168.1.20-192.168.1.40, 192.168.2.50-192.168.10.210

# port_ranges
# format:  port_ranges={port-port | port} [,...] 

port_ranges=5430-5439, 5544, 5588, 6540-6546

# host_ranges_skip
# format:  host_ranges={host-host | host} [,...] 

host_ranges_skip=192.168.1.170-192.168.1.180, 192.168.1.252, 192.168.10.250-192.168.10.255, 192.168.1.253